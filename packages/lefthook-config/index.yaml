# Refer for explanation to following link:
# https://github.com/evilmartians/lefthook
#
# Run the command to test:
#   npx -y lefthook run -v <hook-name>
#
# Examples:
#   npx -y lefthook run -v pre-commit
#   npx -y lefthook run -v commit-msg
#   npx -y lefthook run -v post-merge

extends:
  # ----------------------------------------------------------------
  # pre-commit
  # ----------------------------------------------------------------
  # - packages/lefthook-config/hooks/pre-commit/format/prettier.yaml
  - packages/lefthook-config/hooks/pre-commit/lint/file-extension/yaml.yaml
  - packages/lefthook-config/hooks/pre-commit/lint/file-extension/test.yaml
  - packages/lefthook-config/hooks/pre-commit/lint/file-extension/storybook.yaml
  - packages/lefthook-config/hooks/pre-commit/lint/markdown.yaml

pre-commit:
  parallel: true

commit-msg:
  parallel: true

  commands:
    commitlint:
      run: npx -y commitlint --edit {1} --verbose

    cspell:
      run: npx -y @nozomiishii/cspell-config@latest {1}

post-merge:
  parallel: true

  commands:
    # If you have set 'git config pull.rebase true', use the 'post-rewrite' hook instead of the 'post-merge' hook.
    update-node-modules:
      files: git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD
      glob: '**/{package.json,pnpm-lock.yaml,yarn.lock,package-lock.json}'
      run: |
        if [ -f "pnpm-lock.yaml" ]; then
          echo "ðŸ¥Š Installing dependencies with pnpm..."
          pnpm install
          exit 0
        fi

        if [ -f "yarn.lock" ]; then
          echo "ðŸ¥Š Installing dependencies with yarn..."
          yarn install
          exit 0
        fi

        if [ -f "package-lock.json" ]; then
          echo "ðŸ¥Š Installing dependencies with npm..."
          npm install
          exit 0
        fi

    delete-merged-branches:
      run: git branch --merged | grep -Ev '\*|master|main|dev|develop|development|stag|staging|prod|production' | xargs git branch -d; git fetch --prune;
